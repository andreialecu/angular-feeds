/**
 * angular-feeds - v0.0.5 - 2016-03-24 5:24 PM
 * https://github.com/siddii/angular-feeds
 *
 * Copyright (c) 2016 
 * Licensed MIT <https://github.com/siddii/angular-feeds/blob/master/LICENSE.txt>
 */
"use strict";angular.module("feeds-directives",[]).directive("feed",["feedService","$compile","$templateCache","$http",function(a,b,c,d){return{restrict:"E",transclude:!0,controller:["$scope","$element","$attrs","$timeout","$transclude",function(d,e,f,g,h){function i(b){a.getFeeds(b,f.count).then(function(a){if(a){d.feeds=[],d.error=!1;for(var b=0;b<a.length;b++)d.feeds.push(a[b])}h(d,function(a){e.append(a)})},function(a){console.error("Error loading feed ",a),d.error=a})["finally"](function(){e.find(".spinner").slideUp(),d.$evalAsync("finishedLoading = true")})}d.$watch("finishedLoading",function(a){f.postRender&&a&&g(function(){new Function("element",f.postRender+"(element);")(e)},0)}),d.feeds=[],d.$refreshFeed=function(){d.feedUrl&&i(d.feedUrl)};var j=c.get("feed-spinner.html");e.append(b(j)(d)),f.$observe("url",function(a){a&&(d.feedUrl=a,i(d.feedUrl))})}]}}]),angular.module("feeds",["feeds-services","feeds-directives"]),angular.module("feeds-services",[]).factory("feedService",["$q","$sce","feedCache",function(a,b,c){function d(a){return a.title=b.trustAsHtml(a.title),a.contentSnippet=b.trustAsHtml(a.contentSnippet),a.content=b.trustAsHtml(a.content),a.publishedDate=new Date(a.publishedDate).getTime(),a}function e(a){for(var b=0;b<a.length;b++)d(a[b])}var f=function(b,d){var f=a.defer();if(c.hasCache(b)){var g=c.get(b);e(g),f.resolve(g)}google.load("feeds","1");var h=new google.feeds.Feed(b);return d&&(h.includeHistoricalEntries(),h.setNumEntries(d)),h.load(function(a){a.error?f.reject(a.error):(c.set(b,a.feed.entries),e(a.feed.entries),f.resolve(a.feed.entries))}),f.promise};return{getFeeds:f}}]).factory("feedCache",function(){function a(){return"CACHE_TIMES"in localStorage?angular.fromJson(localStorage.getItem("CACHE_TIMES")):{}}function b(b){var d=a();return b in d&&b in localStorage&&(new Date).getTime()-d[b]<c}var c=3e5;return{set:function(b,c){localStorage.setItem(b,angular.toJson(c));var d=a();d[b]=(new Date).getTime(),localStorage.setItem("CACHE_TIMES",angular.toJson(d))},get:function(a){return b(a)?angular.fromJson(localStorage.getItem(a)):null},hasCache:b}}),angular.module("feeds").run(["$templateCache",function(a){a.put("feed-list.html",'<div>\n    <div ng-show="error" class="alert alert-danger">\n        <h5 class="text-center">Oops... Something bad happened, please try later :(</h5>\n    </div>\n\n    <ul class="media-list">\n        <li ng-repeat="feed in feeds | orderBy:publishedDate:reverse" class="media">\n            <div class="media-body">\n                <h4 class="media-heading"><a target="_new" href="{{feed.link}}" ng-bind-html="feed.title"></a></h4>\n                <p ng-bind-html="!summary ? feed.content : feed.contentSnippet"></p>\n            </div>\n            <hr ng-if="!$last"/>\n        </li>\n    </ul>\n</div>'),a.put("feed-spinner.html",'<div class="spinner">\n    <div class="bar1"></div>\n    <div class="bar2"></div>\n    <div class="bar3"></div>\n    <div class="bar4"></div>\n    <div class="bar5"></div>\n    <div class="bar6"></div>\n    <div class="bar7"></div>\n    <div class="bar8"></div>\n</div>\n')}]);